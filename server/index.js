const express = require('express');\nconst path = require('path');\nconst mongoose = require('mongoose');\nrequire('dotenv').config();\n\nconst app = express();\nconst PORT = process.env.PORT || 3000;\n\napp.use(express.json());\n\n// Mongoose Schemas and Models\nconst contactSchema = new mongoose.Schema({\n  name: { type: String, required: true },\n  email: { type: String, required: true },\n  message: { type: String, required: true },\n  submittedAt: { type: Date, default: Date.now }\n});\nconst Contact = mongoose.model('Contact', contactSchema);\n\nconst menuItemSchema = new mongoose.Schema({\n  name: String,\n  description: String,\n  price: Number,\n  image: String,\n  category: String\n});\nconst MenuItem = mongoose.model('MenuItem', menuItemSchema);\n\nfunction getDefaultMenu() {\n  return [\n    { name: 'Espresso', description: 'Rich, concentrated coffee shot.', price: 3.0, image: '', category: 'Coffee' },\n    { name: 'Latte', description: 'Silky milk with espresso.', price: 4.5, image: '', category: 'Coffee' },\n    { name: 'Cappuccino', description: 'Espresso with foamed milk and cocoa.', price: 4.0, image: '', category: 'Coffee' },\n    { name: 'Cold Brew', description: 'Smooth, chilled coffee brewed cold.', price: 4.5, image: '', category: 'Coffee' }\n  ];\n}\n\nmongoose.connect(process.env.MONGODB_URI)\n  .then(() => {\n    console.log('MongoDB connected');\n    app.listen(PORT, () => {\n      console.log(`Server is running on port ${PORT}`);\n    });\n  })\n  .catch(err => {\n    console.error('Database connection error:', err);\n    process.exit(1);\n  });\n\napp.get('/api/menu', async (req, res) => {\n  try {\n    let items = await MenuItem.find({});\n    if (!items || items.length === 0) {\n      items = getDefaultMenu();\n    }\n    res.json(items);\n  } catch (err) {\n    console.error('Menu fetch error:', err);\n    res.status(500).json({ error: 'Failed to fetch menu' });\n  }\n});\n\napp.post('/api/contact', async (req, res) => {\n  try {\n    const { name, email, message } = req.body;\n    const newContact = new Contact({ name, email, message });\n    await newContact.save();\n    res.status(201).json({ message: 'Contact form submitted successfully!' });\n  } catch (error) {\n    console.error(error);\n    res.status(500).json({ message: 'Server error. Please try again later.' });\n  }\n});\n\n// Serve static files\napp.use(express.static(path.join(__dirname, '../public')));